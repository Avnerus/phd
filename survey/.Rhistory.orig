<<<<<<< HEAD
=======
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.id = "gender"
)
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.scale)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.id = "gender"
)
map_df(genders, ~ {
Telerobot_sorted %>%
dplyr::select(dplyr::matches(scale)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(scale)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.id = "gender"
)
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.scale)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.id = "gender"
)
map_df(genders, ~ {
Telerobot_sorted %>%
dplyr::select(dplyr::matches(scale)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
},
.id = "gender"
)
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x
)
map_df(regs, ~
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x
)
,
.id = "scale"
)
map_df(regs, ~
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x, .id="gender"
)
,
.id = "scale"
)
map_df(regs, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches(.x)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.id = "scale"
)
test <- Telerobot_sorted %>%
dplyr::select(dplyr::matches(""^Q_ROBOT_STATEMENTS_[1-6]$"")) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"")) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$")
test <- Telerobot_sorted %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
test <-
map_df(genders, ~
Telerobot_sorted %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
test <-
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
View(test)
View(test)
genders <- c(1) %>% set_names(c("Female"))
test <-
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
Telerobot_sorted %>% count(Q_DEMOGRAPHICS_2)
Telerobot_sorted %>% count(Q_DEMOGRAPHICS_2) %>% type.convert(as.is = FALSE)
Telerobot_sorted %>% count(Q_DEMOGRAPHICS_2) %>% type.convert(as.is = TRUE)
Telerobot_sorted %>% count(Q_DEMOGRAPHICS_2) %>% type.convert(as.is = TRUE)
Telerobot_decoded %>% count(Q_DEMOGRAPHICS_2)
genders <- c(1) %>% set_names(c("Male"))
test <-
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
genders <- c(2) %>% set_names(c("Male"))
genders <- c(2) %>% set_names(c("Male"))
test <-
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
genders <- c(1) %>% set_names(c("Male"))
test <-
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches("^Q_ROBOT_STATEMENTS_[1-6]$"))
,
.id="gender"
)
map_df(regs, ~
map_df(genders, ~
Telerobot_sorted %>%
>>>>>>> dc90f0ea134fecc9149a8b7b9579c9a15e922577
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x, .id="gender"
)
,
.id = "scale"
)
genders <- c(1, 2) %>% set_names(c("Female", "Male" ))
map_df(regs, ~
map_df(genders, ~
Telerobot_sorted %>%
filter(Q_DEMOGRAPHICS_2 == .x) %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x, .id="gender"
)
,
.id = "scale"
)
groups <- c("PS", "IL") %>% set_names(c("PS", "IL" ))
map_df(regs, ~
map_df(genders, ~
Telerobot_sorted %>%
filter(v == .x) %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x, .id="group"
)
,
.id = "scale"
)
groups <- c("PS", "IL") %>% set_names(c("PS", "IL" ))
map_df(regs, ~
map_df(groups, ~
Telerobot_sorted %>%
filter(v == .x) %>%
dplyr::select(dplyr::matches(.y)) %>%
type.convert(as.is = TRUE) %>%
psych::alpha() %>% .$total
,
.y=.x, .id="group"
)
,
.id = "scale"
)
library(RQDA)
Telerobot_nars <- Telerobot_sorted %>%
mutate(Q_ROBOT_S1 = Q_ROBOT_STATEMENTS_1 + Q_ROBOT_STATEMENTS_2 + Q_ROBOT_STATEMENTS_3 + Q_ROBOT_STATEMENTS_4 + Q_ROBOT_STATEMENTS_5 + Q_ROBOT_STATEMENTS_6) %>%
mutate(Q_ROBOT_S3 = Q_ROBOT_STATEMENTS_7 + Q_ROBOT_STATEMENTS_8 + Q_ROBOT_STATEMENTS_9 + Q_ROBOT_STATEMENTS_10 + Q_ROBOT_STATEMENTS_11) %>%
mutate(Q_ROBOT_NARS = Q_ROBOT_S1 - Q_ROBOT_S3) %>%
relocate(Q_ROBOT_S1, .after = Q_ROBOT_STATEMENTS_11) %>%
relocate(Q_ROBOT_S3, .after = Q_ROBOT_S1) %>%
relocate(Q_ROBOT_NARS, .after = Q_ROBOT_S3)
library(broom)
install.pacakges("broom")
install.pacakge("broom")
install.packages("broom")
cor
install.packages(ggpubr)
install.packages("ggpubr")
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
View(Telerobot_decoded)
View(Telerobot_sorted)
View(Telerobot_decoded)
library(ggpubr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
Telerobot_ages <- Telerobot_sorted %>%
mutate(Q_AGE = 2021 - (2010 - Q_DEMOGRAPHICS_1))
View(Telerobot_ages)
Telerobot_ages <- Telerobot_sorted %>%
mutate(Q_AGE = 2021 - (2010 - Q_DEMOGRAPHICS_1)) %>%
relocate(Q_AGE, .after=Q_DEMOGRAPHICS_1)
View(Telerobot_ages)
compare_means(Q_AGE ~ v, data = Telerobot_ages)
compare_means(Q_AGE ~ v, data = Telerobot_ages, method = "t.test")
# Change method
p + stat_compare_means(method = "t.test")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
# Change method
p + stat_compare_means(method = "t.test")
# Change method
p + stat_compare_means(method = "t.test")
# Change method
p + stat_compare_means(method = "t.test")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
p + stat_summary(fun.data = function(x) data.frame(y=32, label = paste("Mean=",mean(x))), geom="text")
# Change method
p + stat_compare_means(method = "t.test")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
p + stat_summary(fun.data = function(x) data.frame(y=32, label = paste("Mean=",mean(x))), geom="text")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
p + stat_summary(fun.data = function(x) data.frame(y=0, label = paste("Mean=",mean(x))), geom="text")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
p + stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter")
#  Add p-value
p + stat_compare_means()
p + stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
p <- ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means() +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means() +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(method = "t.test") +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(method = "t.test", label.y = 70) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(method = "t.test", label.y = 80) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(method = "t.test", label.y = 75) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 75) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
save.image("~/Nextcloud/PhD/Survey/R/wip.RData")
library(ggpubr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
ggboxplot(Telerobot_nars, x = "v", y = "Q_NARS",
color = "v",
add = "jitter") +
stat_compare_means() +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
View(Telerobot_nars)
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means() +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 15) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 20) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 18) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 18) +
stat_summary(fun.data = function(x) data.frame(y=-20, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 18) +
stat_summary(fun.data = function(x) data.frame(y=-22, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
facet_wrap(~Q_DEMOGRAPHICS_1)
stat_compare_means(label.y = 18) +
stat_summary(fun.data = function(x) data.frame(y=-22, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "Q_DEMOGRAPHICS_1", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter") +
facet_wrap(~v) +
stat_compare_means(label.y = 18) +
stat_summary(fun.data = function(x) data.frame(y=-22, label = paste("Mean=",mean(x))), geom="text")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v",
add = "jitter")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "Q_DEMOGRAPHICS_1")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "Q_DEMOGRAPHICS_")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "Q_DEMOGRAPHICS_1")
ggboxplot(Telerobot_nars, x = "v", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars, x = "Q_DEMOGRAPHICS_1", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars, x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2),
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2),
mutate(Q_GENDER, as.factor
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) >%%
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER, as.factor),
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_DEMOGRAPHICS_2, as.factor),
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(c("Q_DEMOGRAPHICS_2"), as.factor),
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as.factor(Q_DEMOGRAPHICS_2)),
x = "Q_DEMOGRAPHICS_2", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as.factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "v")
vars(Q_DEMOGRAPHICS_2)
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "v")
as_factor
library(haven)
as_factor
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER") +
facet(facet.by = "v")
ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER") +
facet(facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER") +
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p)
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "v", y = "Q_ROBOT_NARS",
color = "v")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "v")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p + theme_bw(), facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p, facet.by = "v")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 75) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
<<<<<<< HEAD
library(ggpubr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
library(ggpubr)
library(dplyr)
library(haven)
knitr::opts_chunk$set(echo = TRUE)
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_ROBOT_NARS",
color = "Q_GENDER")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_TECH_CONFIDENCE",
color = "Q_GENDER")
facet(p, facet.by = "v")
p <- ggboxplot(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER", y = "Q_TECH_CONFIDENCE",
color = "Q_GENDER")
facet(p, facet.by = "v")
ggscatter(Telerobot_sorted, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
ggscatter(Telerobot_nars, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
ggscatter(Telerobot_nars, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE                               # Add confidence interval
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
ggscatter(Telerobot_nars, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
ggscatter(Telerobot_nars, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
p <- ggscatter(Telerobot_nars, x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
p <- ggscatter(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)), x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
p <- ggscatter(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)), x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS", color="Q_GENDER",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
p <- ggscatter(Telerobot_nars %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)), x = "Q_TECH_CONFIDENCE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
Telerobot_ages <- Telerobot_narw %>%
mutate(Q_AGE = 2021 - (2010 - Q_DEMOGRAPHICS_1)) %>%
relocate(Q_AGE, .after=Q_DEMOGRAPHICS_1)
Telerobot_ages <- Telerobot_nars %>%
mutate(Q_AGE = 2021 - (2010 - Q_DEMOGRAPHICS_1)) %>%
relocate(Q_AGE, .after=Q_DEMOGRAPHICS_1)
p <- ggscatter(Telerobot_nars, x = "Q_AGE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
p <- ggscatter(Telerobot_ages, x = "Q_AGE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
ggboxplot(Telerobot_ages, x = "v", y = "Q_AGE",
color = "v",
add = "jitter") +
stat_compare_means(label.y = 75) +
stat_summary(fun.data = function(x) data.frame(y=10, label = paste("Mean=",mean(x))), geom="text")
p <- ggscatter(Telerobot_ages, x = "Q_AGE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
p
p <- ggscatter(Telerobot_ages, x = "Q_AGE", y = "Q_ROBOT_NARS", color="v",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = 3, label.y = 30)
facet(p, facet.by = "v")
library(xlsx)
library(haven)
knitr::opts_chunk$set(echo = TRUE)
is.haven <- function(x) "haven_labelled" %in% class(x)
with_labels <- Filter(is.haven, Telerobot_ages) %>% names()
Telerobot_decoded = Telerobot_ages %>%
mutate_at( vars(with_labels), as_factor)
write.xlsx(Telerobot_decoded, "Telerobot_decoded_ages_nars.xlsx")
=======
>>>>>>> dc90f0ea134fecc9149a8b7b9579c9a15e922577
