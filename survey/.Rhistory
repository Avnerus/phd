conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
test_df <- Telerobot_ages %>%
select(v,ResponseId, starts_with("Q_GROUP_INTEREST"), Q_TELEROBOT_WOULD_U_3) %>%
drop_na() %>%
filter(Q_TELEROBOT_WOULD_U_3 >= 5)
ggsummarystats(
melt(test_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
base_df <- Telerobot_ages %>% select(starts_with("Q_GROUP_INTEREST"), 'ResponseId','v',Q_DEMOGRAPHICS_2) %>% drop_na()
summary_fig <- ggsummarystats(
melt(base_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
summary_fig
df <- Telerobot_ages %>%
#filter(Q_DEMOGRAPHICS_2 <= 2) %>%
#mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)) %>%
#filter(Q_GENDER == 'Female') %>%
#filter(v == 'PS') %>%
select(v,starts_with("Q_GROUP_INTEREST"), Q_GENDER, Q_AGE, Q_TECH_CONFIDENCE, Q_ROBOT_NARS,Q_TELEROBOT_WOULD_U_3) %>%
drop_na()
base_df <- Telerobot_ages %>% select(starts_with("Q_GROUP_INTEREST"), 'ResponseId','v',Q_DEMOGRAPHICS_2) %>% drop_na()
summary_fig <- ggsummarystats(
melt(base_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
summary_fig
df <- Telerobot_ages %>%
#filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)) %>%
#filter(Q_GENDER == 'Female') %>%
#filter(v == 'PS') %>%
select(v,starts_with("Q_GROUP_INTEREST"), Q_AGE, Q_TECH_CONFIDENCE, Q_ROBOT_NARS,Q_TELEROBOT_WOULD_U_3) %>%
drop_na()
anova_df <- bind_rows(
c("Q_GROUP_INTEREST_1","Q_GROUP_INTEREST_2","Q_GROUP_INTEREST_3","Q_GROUP_INTEREST_4") %>%
map(~ as_tibble(anova_test(as.formula(paste0(.x," ~  v")), data=base_df,effect.size = "pes",detailed = TRUE)) %>% mutate(Medium = COLUMN_DICTIONARY[.x]))
)
anova_fig <- ggtexttable(
anova_df %>% mutate(Effect="Nationality") %>% relocate(Medium, .before = Effect),
rows = NULL
)
anova_fig
#ggarrange(summary_fig, anova_fig, ncol = 1, nrow = 2, heights = c(1, 0.5))
df %>%
group_by(v) %>%
summarise(across(c(starts_with("Q_GROUP_INTEREST")), list(mean=mean,sd=sd)))
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_3",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_GROUP_INTEREST_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
test_df <- Telerobot_ages %>%
select(v,ResponseId, starts_with("Q_GROUP_INTEREST"), Q_TELEROBOT_WOULD_U_3) %>%
drop_na() %>%
filter(Q_TELEROBOT_WOULD_U_3 >= 5)
ggsummarystats(
melt(test_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
base_df <- Telerobot_ages %>% select(starts_with("Q_GROUP_INTEREST"), 'ResponseId','v') %>% drop_na()
summary_fig <- ggsummarystats(
melt(base_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
summary_fig
df <- Telerobot_ages %>%
#filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)) %>%
#filter(Q_GENDER == 'Female') %>%
#filter(v == 'PS') %>%
select(v,starts_with("Q_GROUP_INTEREST"), Q_AGE, Q_TECH_CONFIDENCE, Q_ROBOT_NARS,Q_TELEROBOT_WOULD_U_3) %>%
drop_na()
anova_df <- bind_rows(
c("Q_GROUP_INTEREST_1","Q_GROUP_INTEREST_2","Q_GROUP_INTEREST_3","Q_GROUP_INTEREST_4") %>%
map(~ as_tibble(anova_test(as.formula(paste0(.x," ~  v")), data=base_df,effect.size = "pes",detailed = TRUE)) %>% mutate(Medium = COLUMN_DICTIONARY[.x]))
)
anova_fig <- ggtexttable(
anova_df %>% mutate(Effect="Nationality") %>% relocate(Medium, .before = Effect),
rows = NULL
)
anova_fig
#ggarrange(summary_fig, anova_fig, ncol = 1, nrow = 2, heights = c(1, 0.5))
df %>%
group_by(v) %>%
summarise(across(c(starts_with("Q_GROUP_INTEREST")), list(mean=mean,sd=sd)))
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_3",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_GROUP_INTEREST_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
test_df <- Telerobot_ages %>%
select(v,ResponseId, starts_with("Q_GROUP_INTEREST"), Q_TELEROBOT_WOULD_U_3) %>%
drop_na() %>%
filter(Q_TELEROBOT_WOULD_U_3 >= 5)
ggsummarystats(
melt(test_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
base_df <- Telerobot_ages %>% select(starts_with("Q_GROUP_INTEREST"), 'ResponseId','v') %>% drop_na()
summary_fig <- ggsummarystats(
melt(base_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
summary_fig
summary_fig <- ggsummarystats(
melt(base_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd")
)
summary_fig
df <- Telerobot_ages %>%
#filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)) %>%
#filter(Q_GENDER == 'Female') %>%
#filter(v == 'PS') %>%
select(v,starts_with("Q_GROUP_INTEREST"), Q_AGE, Q_TECH_CONFIDENCE, Q_ROBOT_NARS,Q_TELEROBOT_WOULD_U_3) %>%
drop_na()
anova_df <- bind_rows(
c("Q_GROUP_INTEREST_1","Q_GROUP_INTEREST_2","Q_GROUP_INTEREST_3","Q_GROUP_INTEREST_4") %>%
map(~ as_tibble(anova_test(as.formula(paste0(.x," ~  v")), data=base_df,effect.size = "pes",detailed = TRUE)) %>% mutate(Medium = COLUMN_DICTIONARY[.x]))
)
anova_fig <- ggtexttable(
anova_df %>% mutate(Effect="Nationality") %>% relocate(Medium, .before = Effect),
rows = NULL
)
anova_fig
#ggarrange(summary_fig, anova_fig, ncol = 1, nrow = 2, heights = c(1, 0.5))
df %>%
group_by(v) %>%
summarise(across(c(starts_with("Q_GROUP_INTEREST")), list(mean=mean,sd=sd)))
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_3",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_AGE", y = "Q_GROUP_INTEREST_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_GROUP_INTEREST_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_TELEROBOT_WOULD_U_3", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_1",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_GROUP_INTEREST_2",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
test_df <- Telerobot_ages %>%
select(v,ResponseId, starts_with("Q_GROUP_INTEREST"), Q_TELEROBOT_WOULD_U_3) %>%
drop_na() %>%
filter(Q_TELEROBOT_WOULD_U_3 >= 5)
ggsummarystats(
melt(test_df %>% plyr::rename(COLUMN_DICTIONARY), id=c('ResponseId','v'),variable.name = "Medium", value.name = "Interest"),
x = "Medium", y = "Interest", digits = 3,
ggfunc = ggboxplot, palette="npg", add="jitter", color="Medium",
legend = "none",
summaries = c("n", "median", "mean","sd"),
facet.by = "v"
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggpubr)
library(tidyr)
library(reshape2)
library(grid)
library(purrr)
library(haven)
library(rstatix)
COLUMN_DICTIONARY <-
c(
Q_GROUP_INTEREST_1 = "Telerobot",
Q_GROUP_INTEREST_2 = "Telepuppet",
Q_GROUP_INTEREST_3 = "F2F",
Q_GROUP_INTEREST_4 = "Video",
Q_SHOW_INTEREST = "Puppet show (outgroup)",
Q_TELEROBOT_WOULD_U_1 = "Approaching",
Q_TELEROBOT_WOULD_U_2 = "Having at home",
Q_TELEROBOT_WOULD_U_3 = "Operating",
Q_PUPPET_INTEREST = "Telepuppet",
Q_TELEROBOT_IDENT_1 = "Same nationality",
Q_TELEROBOT_IDENT_2 = "Same age",
Q_TELEROBOT_IDENT_3 = "Same gender",
Q_TELEROBOT_IDENT_4 = "Same voice",
Q_TELEROBOT_IDENT_5 = "Same religion",
Q_TELEROBOT_IDENT_6 = "Bring additional objects",
Q_TELEROBOT_IDENT_7 = "Would not reveal myself",
Q_TELEROBOT_IDENT_8 = "Be someone else",
Q_TELEROBOT_IDENT_G_1 = "Same nationality",
Q_TELEROBOT_IDENT_G_2 = "Same age",
Q_TELEROBOT_IDENT_G_3 = "Same gender",
Q_TELEROBOT_IDENT_G_4 = "Same voice",
Q_TELEROBOT_IDENT_G_6 = "Same religion",
Q_TELEROBOT_IDENT_G_9 = "Bring additional objects",
Q_TELEROBOT_IDENT_G_10 = "Would not reveal myself",
Q_TELEROBOT_IDENT_G_11 = "Be someone else",
IDENT_1_DIFF = "Same nationality",
IDENT_2_DIFF = "Same age",
IDENT_3_DIFF = "Same gender",
IDENT_4_DIFF = "Same voice",
IDENT_5_DIFF = "Same religion",
IDENT_6_DIFF = "Bring additional objects",
IDENT_7_DIFF = "Would not reveal myself",
IDENT_8_DIFF = "Be someone else",
Q_TELEROBOT_FEAT_1 = "Translate speech",
Q_TELEROBOT_FEAT_2 = "Travel around",
Q_TELEROBOT_FEAT_3 = "Hand gestures",
Q_TELEROBOT_FEAT_4 = "Touch feedback",
Q_TELEROBOT_FEAT_5 = "Show emotions",
Q_TELEROBOT_FEAT_6 = "Play online content",
Q_TELEROBOT_FEAT_7 = "Show personal content",
Q_TELEROBOT_FEAT_8 = "Play games",
Q_TELEROBOT_FEAT_9 = "Suggest topics",
Q_TELEROBOT_FEAT_G_1 = "Translate speech",
Q_TELEROBOT_FEAT_G_2 = "Travel around",
Q_TELEROBOT_FEAT_G_3 = "Hand gestures",
Q_TELEROBOT_FEAT_G_4 = "Touch feedback",
Q_TELEROBOT_FEAT_G_5 = "Show emotions",
Q_TELEROBOT_FEAT_G_6 = "Play online content",
Q_TELEROBOT_FEAT_G_7 = "Show personal content",
Q_TELEROBOT_FEAT_G_8 = "Play games",
Q_TELEROBOT_FEAT_G_9 = "Suggest topics",
FEAT_1_DIFF = "Translate speech",
FEAT_2_DIFF = "Travel around",
FEAT_3_DIFF = "Hand gestures",
FEAT_4_DIFF = "Touch feedback",
FEAT_5_DIFF = "Show emotions",
FEAT_6_DIFF = "Play online content",
FEAT_7_DIFF = "Show personal content",
FEAT_8_DIFF = "Play games",
FEAT_9_DIFF = "Suggest topics",
Q_TELEROBOT_FEAT_1_M = "Translate speech",
Q_TELEROBOT_FEAT_2_M = "Travel around",
Q_TELEROBOT_FEAT_3_M = "Hand gestures",
Q_TELEROBOT_FEAT_4_M = "Touch feedback",
Q_TELEROBOT_FEAT_5_M = "Show emotions",
Q_TELEROBOT_FEAT_6_M = "Play online content",
Q_TELEROBOT_FEAT_7_M = "Show personal content",
Q_TELEROBOT_FEAT_8_M = "Play games",
Q_TELEROBOT_FEAT_9_M = "Suggest topics",
Q_TELEROBOT_FEAT_G_1_M = "Translate speech",
Q_TELEROBOT_FEAT_G_2_M = "Travel around",
Q_TELEROBOT_FEAT_G_3_M = "Hand gestures",
Q_TELEROBOT_FEAT_G_4_M = "Touch feedback",
Q_TELEROBOT_FEAT_G_5_M = "Show emotions",
Q_TELEROBOT_FEAT_G_6_M = "Play online content",
Q_TELEROBOT_FEAT_G_7_M = "Show personal content",
Q_TELEROBOT_FEAT_G_8_M = "Play games",
Q_TELEROBOT_FEAT_G_9_M = "Suggest topics",
Q_SHOW_GENRE_1 = "Political satire",
Q_SHOW_GENRE_2 = "Children's theater",
Q_SHOW_GENRE_3 = "Adult drama",
Q_SHOW_GENRE_4 = "Situational comedy",
Q_SHOW_GENRE_5 = "Other"
)
Telerobot_ages_filtered <- Telerobot_ages_filtered%>%
dplyr::filter(Q_AGE >= 15)
Telerobot_ages_filtered <- Telerobot_ages %>%
dplyr::filter(Q_AGE >= 15)
load("C:/Users/avner/Nextcloud/PhD/Survey/R/Telerobotic intergroup contact_ Acceptance and preferences in Israel and Palestine_v2/data.RData")
load("C:/Users/avner/Nextcloud/PhD/Survey/R/Telerobotic intergroup contact_ Acceptance and preferences in Israel and Palestine_v2/data.RData")
View(Telerobot_ages)
View(Telerobot_ages)
