add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_1", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_1", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_1", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_3", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_3", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_3", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
#facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOTS_SLIDER_4",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
#facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
df <- Telerobot_ages %>%
#filter(v == 'PS') %>%
select(v,Q_ROBOT_NARS, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4, starts_with("Q_DEMOGRAPHICS_2_")) %>%
drop_na() #%>%
#mutate(across(starts_with("Q_DEMOGRAPHICS_2_"), ~(.x %% 2)))
ggscatter(df, x = "Q_DEMOGRAPHICS_2_2", y = "Q_ROBOT_NARS",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
#facet.by = 'v',
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -10, label.y = 20)
summary(lm(Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2_2, data = df))
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
ggbarplot(
df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
ggbarplot(
base_df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
ggbarplot(
base_df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
ggscatter(df, x = "Q_ROBOT_NARS", y = "Q_TELEROBOT_MAKE",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
ggbarplot(
base_df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
ggscatter(base_df, x = "Q_ROBOT_NARS", y = "Q_TELEROBOT_MAKE",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
ggbarplot(
base_df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
ggscatter(base_df, x = "Q_ROBOT_NARS", y = "Q_TELEROBOT_MAKE",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
base_df <- Telerobot_ages %>%
select(v,Q_TELEROBOT_MAKE, Q_DEMOGRAPHICS_2, Q_AGE, Q_ROBOT_NARS) %>%
drop_na()
ggbarplot(
base_df %>% filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)),
x = "Q_GENDER",
y = "Q_TELEROBOT_MAKE",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
bind_rows(
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v")),detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_AGE")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_DEMOGRAPHICS_2")) ,detailed = TRUE,effect.size = "pes")),
as_tibble(base_df %>% anova_test(as.formula(paste0('Q_TELEROBOT_MAKE'," ~ v * Q_ROBOT_NARS")) ,detailed = TRUE,effect.size = "pes"))
)
ggscatter(base_df, x = "Q_ROBOT_NARS", y = "Q_TELEROBOT_MAKE",
add = "reg.line",                                 # Add regression line
conf.int = TRUE,                                  # Add confidence interval
#facet.by = "v",
add.params = list(color = "blue",
fill = "lightgray")
)+
stat_cor(method = "pearson", label.x = -15, label.y = 60)
save.image("~/Nextcloud/PhD/Survey/R/09042022.RData")
knitr::opts_chunk$set(echo = TRUE)
#load("/home/avnerus/Nextcloud/PhD/Survey/R/09042022.RData")
library(dplyr)
library(ggpubr)
library(tidyr)
library(reshape2)
library(grid)
library(purrr)
library(haven)
library(rstatix)
COLUMN_DICTIONARY <-
c(
Q_GROUP_INTEREST_1 = "Telerobot",
Q_GROUP_INTEREST_2 = "Telepuppet",
Q_GROUP_INTEREST_3 = "F2F",
Q_GROUP_INTEREST_4 = "Video",
Q_SHOW_INTEREST = "Puppet show (outgroup)",
Q_TELEROBOT_WOULD_U_1 = "Approach",
Q_TELEROBOT_WOULD_U_2 = "at home",
Q_TELEROBOT_WOULD_U_3 = "Operate",
Q_PUPPET_INTEREST = "Telepuppet",
Q_TELEROBOT_IDENT_1 = "Same nationality",
Q_TELEROBOT_IDENT_2 = "Same age",
Q_TELEROBOT_IDENT_3 = "Same gender",
Q_TELEROBOT_IDENT_4 = "Same voice",
Q_TELEROBOT_IDENT_5 = "Same religion",
Q_TELEROBOT_IDENT_6 = "Bring additional objects",
Q_TELEROBOT_IDENT_7 = "Would not reveal myself",
Q_TELEROBOT_IDENT_8 = "Be someone else",
Q_TELEROBOT_IDENT_G_1 = "Same nationality",
Q_TELEROBOT_IDENT_G_2 = "Same age",
Q_TELEROBOT_IDENT_G_3 = "Same gender",
Q_TELEROBOT_IDENT_G_4 = "Same voice",
Q_TELEROBOT_IDENT_G_6 = "Same religion",
Q_TELEROBOT_IDENT_G_9 = "Bring additional objects",
Q_TELEROBOT_IDENT_G_10 = "Would not reveal myself",
Q_TELEROBOT_IDENT_G_11 = "Be someone else",
IDENT_1_DIFF = "Same nationality",
IDENT_2_DIFF = "Same age",
IDENT_3_DIFF = "Same gender",
IDENT_4_DIFF = "Same voice",
IDENT_5_DIFF = "Same religion",
IDENT_6_DIFF = "Bring additional objects",
IDENT_7_DIFF = "Would not reveal myself",
IDENT_8_DIFF = "Be someone else",
Q_TELEROBOT_FEAT_1 = "Translate speech",
Q_TELEROBOT_FEAT_2 = "Travel around",
Q_TELEROBOT_FEAT_3 = "Hand gestures",
Q_TELEROBOT_FEAT_4 = "Touch feedback",
Q_TELEROBOT_FEAT_5 = "Show emotions",
Q_TELEROBOT_FEAT_6 = "Play online content",
Q_TELEROBOT_FEAT_7 = "Show personal content",
Q_TELEROBOT_FEAT_8 = "Play games",
Q_TELEROBOT_FEAT_9 = "Suggest topics",
Q_TELEROBOT_FEAT_G_1 = "Translate speech",
Q_TELEROBOT_FEAT_G_2 = "Travel around",
Q_TELEROBOT_FEAT_G_3 = "Hand gestures",
Q_TELEROBOT_FEAT_G_4 = "Touch feedback",
Q_TELEROBOT_FEAT_G_5 = "Show emotions",
Q_TELEROBOT_FEAT_G_6 = "Play online content",
Q_TELEROBOT_FEAT_G_7 = "Show personal content",
Q_TELEROBOT_FEAT_G_8 = "Play games",
Q_TELEROBOT_FEAT_G_9 = "Suggest topics",
FEAT_1_DIFF = "Translate speech",
FEAT_2_DIFF = "Travel around",
FEAT_3_DIFF = "Hand gestures",
FEAT_4_DIFF = "Touch feedback",
FEAT_5_DIFF = "Show emotions",
FEAT_6_DIFF = "Play online content",
FEAT_7_DIFF = "Show personal content",
FEAT_8_DIFF = "Play games",
FEAT_9_DIFF = "Suggest topics",
Q_TELEROBOT_FEAT_1_M = "Translate speech",
Q_TELEROBOT_FEAT_2_M = "Travel around",
Q_TELEROBOT_FEAT_3_M = "Hand gestures",
Q_TELEROBOT_FEAT_4_M = "Touch feedback",
Q_TELEROBOT_FEAT_5_M = "Show emotions",
Q_TELEROBOT_FEAT_6_M = "Play online content",
Q_TELEROBOT_FEAT_7_M = "Show personal content",
Q_TELEROBOT_FEAT_8_M = "Play games",
Q_TELEROBOT_FEAT_9_M = "Suggest topics",
Q_TELEROBOT_FEAT_G_1_M = "Translate speech",
Q_TELEROBOT_FEAT_G_2_M = "Travel around",
Q_TELEROBOT_FEAT_G_3_M = "Hand gestures",
Q_TELEROBOT_FEAT_G_4_M = "Touch feedback",
Q_TELEROBOT_FEAT_G_5_M = "Show emotions",
Q_TELEROBOT_FEAT_G_6_M = "Play online content",
Q_TELEROBOT_FEAT_G_7_M = "Show personal content",
Q_TELEROBOT_FEAT_G_8_M = "Play games",
Q_TELEROBOT_FEAT_G_9_M = "Suggest topics",
Q_SHOW_GENRE_1 = "Political satire",
Q_SHOW_GENRE_2 = "Children's theater",
Q_SHOW_GENRE_3 = "Adult drama",
Q_SHOW_GENRE_4 = "Situational comedy",
Q_SHOW_GENRE_5 = "Other"
)
ggdensity(Telerobot_ages %>%
select(Q_ROBOT_NARS, v) %>%
mutate(Q_ROBOT_NARS_INV = Q_ROBOT_NARS * -1) ,x = "Positive attidue toward robots (NARS inverted)", fill = "lightblue",facet.by = "v")
ggdensity(Telerobot_ages %>%
select(Q_ROBOT_NARS, v) %>%
mutate(Q_ROBOT_NARS_INV = Q_ROBOT_NARS * -1) ,x = "Q_ROBOT_NARS_INV", fill = "lightblue",facet.by = "v",xlab = "Positive attidue toward robots (NARS inverted)" )
df <- Telerobot_ages %>%
select(Q_ROBOT_NARS,v,Q_AGE, Q_DEMOGRAPHICS_2, Q_TECH_CONFIDENCE,Q_ROBOTS_SLIDER_4) %>%
filter(Q_DEMOGRAPHICS_2 <= 2) %>%
mutate(Q_GENDER = as_factor(Q_DEMOGRAPHICS_2)) %>%
drop_na()
anova_test(df, Q_ROBOT_NARS ~ v * Q_AGE * Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
ggbarplot(
df,
x = "Q_GENDER",
y = "Q_ROBOT_NARS",
add="mean",
fill = "Q_GENDER",
facet.by = "v",
palette = get_palette("npg", 3)
)
# Significance of different between men and women
rbind(
df %>%
filter(v == "IL") %>%
t_test(Q_ROBOT_NARS ~ Q_GENDER),
df %>%
filter(v == "IL") %>%
t_test(Q_ROBOTS_SLIDER_4 ~ Q_GENDER)
);
rbind(
df %>%
filter(v == "PS") %>%
t_test(Q_ROBOT_NARS ~ Q_GENDER),
df %>%
filter(v == "PS") %>%
t_test(Q_ROBOTS_SLIDER_4 ~ Q_GENDER)
)
rbind(
df %>%
filter(Q_GENDER == "Male") %>%
t_test(Q_ROBOT_NARS ~ v),
df %>%
filter(Q_GENDER == "Male") %>%
t_test(Q_ROBOTS_SLIDER_4 ~ v)
)
anova_test(df, Q_ROBOT_NARS ~ v * Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(Telerobot_ages %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(Telerobot_ages %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(Telerobot_ages %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(Telerobot_ages %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
base_df <- Telerobot_ages %>% select("v", "Q_ROBOT_NARS", "Q_DEMOGRAPHICS_2", "Q_TECH_CONFIDENCE") %>% drop_na()
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
base_df <- Telerobot_ages %>% select("v", "Q_ROBOT_NARS", "Q_DEMOGRAPHICS_2", "Q_TECH_CONFIDENCE") %>% drop_na()
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")\
base_df <- Telerobot_ages %>% select("v", "Q_ROBOT_NARS", "Q_DEMOGRAPHICS_2", "Q_TECH_CONFIDENCE") %>% drop_na()
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2 * Q_TECH_CONFIDENCE, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
base_df <- Telerobot_ages %>% select("v", "Q_ROBOT_NARS", "Q_DEMOGRAPHICS_2", "Q_TECH_CONFIDENCE", "Q_ROBOTS_SLIDER_4") %>% drop_na()
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2 * Q_TECH_CONFIDENCE, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_SLIDER_4 ~ Q_DEMOGRAPHICS_2 , covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
base_df <- Telerobot_ages %>% select("v", "Q_ROBOT_NARS", "Q_DEMOGRAPHICS_2", "Q_TECH_CONFIDENCE", "Q_ROBOTS_SLIDER_4") %>% drop_na()
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "PS"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOT_NARS ~ Q_DEMOGRAPHICS_2 * Q_TECH_CONFIDENCE, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOTS_SLIDER_4 ~ Q_DEMOGRAPHICS_2 , covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
anova_test(base_df %>% filter (v == "IL"), Q_ROBOTS_SLIDER_4 ~ Q_DEMOGRAPHICS_2 * Q_TECH_CONFIDENCE, covariate = Q_TECH_CONFIDENCE, detailed = TRUE, effect.size = "pes")
